import { CONTRACTS } from '../contracts';
import { ACTIONS } from '../onTxHashActions';
import { DETAILS } from '../details';

export const UBER_MINION_TX = {
  UBER_EXECUTE_ACTION: {
    contract: CONTRACTS.UBERHAUS_MINION,
    name: 'executeAction',
    poll: 'subgraph',
    onTxHash: ACTIONS.GENERIC_MODAL,
    display: 'Executing Minion Proposal',
    errMsg: 'Error Executing Minion Proposal',
    successMsg: 'Minion Proposal Executed!',
  },
  APPROVE_UHMINION_HAUS: {
    contract: CONTRACTS.UBERHAUS_MINION,
    name: 'approveUberHaus',
    poll: 'subgraph',
    onTxHash: ACTIONS.GENERIC_MODAL,
    display: 'Approving HAUS',
    errMsg: 'Error Approving HAUS',
    successMsg: "Approved Minion's HAUS",
  },
  UBERHAUS_MINION_EXECUTE_APPOINTMENT: {
    contract: CONTRACTS.UBERHAUS_MINION,
    name: 'executeAppointment',
    specialPoll: 'executeAction',
    onTxHash: ACTIONS.GENERIC_MODAL,
    display: 'Executing Minion Proposal',
    errMsg: 'Error Executing Minion Proposal',
    successMsg: 'Minion Proposal Executed!',
  },
  UBERHAUS_DELEGATE: {
    contract: CONTRACTS.LOCAL_UBERHAUS_MINION,
    name: 'nominateDelegate',
    onTxHash: ACTIONS.PROPOSAL,
    poll: 'subgraph',
    display: 'Submit Proposal',
    errMsg: 'Error submitting proposal',
    successMsg: 'Proposal submitted!',
    gatherArgs: [
      '.localValues.uberHausDaoAddress',
      '.values.uberHausDelegate',
      '.localValues.delegateExpiration',
      {
        type: 'detailsToJSON',
        gatherFields: DETAILS.UBERHAUS_DELEGATE,
      },
    ],
    createDiscourse: true,
  },
  UBERHAUS_STAKING: {
    contract: CONTRACTS.LOCAL_UBERHAUS_MINION,
    name: 'proposeAction',
    onTxHash: ACTIONS.PROPOSAL,
    poll: 'subgraph',
    display: 'Submit Proposal',
    errMsg: 'Error submitting proposal',
    successMsg: 'Proposal submitted!',
    gatherArgs: [
      '.contextData.daoid',
      '.localValues.uberHausDaoAddress',
      '.values.tributeToken',
      '0',
      {
        type: 'encodeHex',
        contract: CONTRACTS.UBERHAUS_MOLOCH,
        fnName: 'submitProposal',
        gatherArgs: [
          '.localValues.minionAddress',
          '.values.sharesRequested || 0',
          '0',
          '.values.uberHausTributeOffered',
          '.values.tributeToken',
          '0',
          '.contextData.daoOverview.depositToken.tokenAddress',
          {
            type: 'detailsToJSON',
            gatherFields: DETAILS.UBERHAUS_STAKING,
          },
        ],
      },
      {
        type: 'detailsToJSON',
        gatherFields: DETAILS.UBERHAUS_STAKING,
      },
    ],
    createDiscourse: true,
  },
  UBERHAUS_RAGEQUIT: {
    contract: CONTRACTS.LOCAL_UBERHAUS_MINION,
    name: 'proposeAction',
    onTxHash: ACTIONS.PROPOSAL,
    poll: 'subgraph',
    display: 'Submit Proposal',
    errMsg: 'Error submitting proposal',
    successMsg: 'Proposal submitted!',
    gatherArgs: [
      '.contextData.daoid',
      '.localValues.uberHausDaoAddress',
      '.contextData.daoOverview.depositToken.tokenAddress',
      '0',
      {
        type: 'encodeHex',
        contract: CONTRACTS.UBERHAUS_MOLOCH,
        fnName: 'ragequit',
        gatherArgs: [
          '.values.uberHausShares || 0',
          '.values.uberHausLoot || 0',
        ],
      },
      {
        type: 'detailsToJSON',
        gatherFields: DETAILS.UBERHAUS_RAGEQUIT,
      },
    ],
    createDiscourse: true,
  },
  UBERHAUS_WITHDRAW: {
    contract: CONTRACTS.LOCAL_UBERHAUS_MINION,
    name: 'doWithdraw',
    onTxHash: ACTIONS.PROPOSAL,
    poll: 'subgraph',
    display: 'Submit Proposal',
    errMsg: 'Error submitting proposal',
    successMsg: 'Proposal submitted!',
    gatherArgs: [
      '.localValues.uberHausDaoAddress',
      '.values.tributeToken',
      '.values.uberHausWithdraw' || '0',
    ],
    createDiscourse: true,
  },
  UBERHAUS_PULL: {
    contract: CONTRACTS.LOCAL_UBERHAUS_MINION,
    name: 'pullGuildFunds',
    onTxHash: ACTIONS.PROPOSAL,
    poll: 'subgraph',
    display: 'Submit Proposal',
    errMsg: 'Error submitting proposal',
    successMsg: 'Proposal submitted!',
    gatherArgs: ['.values.tributeToken', '.values.uberHausPull' || '0'],
    createDiscourse: true,
  },
  // UBERHAUS_CLAIM_REWARDS: {
  //   contract: CONTRACTS.LOCAL_UBERHAUS_MINION,
  //   name: 'claimDelegateReward',
  //   poll: 'subgraph',
  //   onTxHash: ACTIONS.PROPOSAL,
  //   display: 'Submit Proposal',
  //   errMsg: 'Error submitting proposal',
  //   successMsg: 'Proposal submitted!',
  // },
};
